/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.example.Reto5.vistas;

import com.example.Reto5.Reto5Application;
import com.example.Reto5.SpringContext;
import com.example.Reto5.modelos.peliculas;
import com.example.Reto5.repositorio.PeliculaRepositorio;
import java.util.Optional;

/**
 *
 * @author yeimy
 */
public class peliculaVista extends javax.swing.JFrame {
PeliculaRepositorio  pelicularepositorio;
    /**
     * Creates new form peliculaVista
     */
    public peliculaVista() {
        initComponents();
        String [] args = {};
        Reto5Application.IniciarSpring();
         
        pelicularepositorio = SpringContext.getBean(PeliculaRepositorio.class);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        CampoIdPelicula = new javax.swing.JTextField();
        CampoTitulo = new javax.swing.JTextField();
        CampoResumen = new javax.swing.JTextField();
        CampoAño = new javax.swing.JTextField();
        CampoDirector = new javax.swing.JTextField();
        CampoSalida = new javax.swing.JLabel();
        BotonActualizar = new javax.swing.JButton();
        BotonCrear = new javax.swing.JButton();
        BotonBuscar = new javax.swing.JButton();
        BotonEliminar = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Título");

        jLabel2.setText("Id Película");

        jLabel3.setText("Director");

        jLabel4.setText("Resumen");

        jLabel5.setText("Año");

        CampoIdPelicula.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CampoIdPeliculaActionPerformed(evt);
            }
        });

        CampoTitulo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CampoTituloActionPerformed(evt);
            }
        });

        CampoResumen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CampoResumenActionPerformed(evt);
            }
        });

        CampoAño.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CampoAñoActionPerformed(evt);
            }
        });

        CampoDirector.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CampoDirectorActionPerformed(evt);
            }
        });

        CampoSalida.setText("...");

        BotonActualizar.setText("Actualizar");
        BotonActualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonActualizarActionPerformed(evt);
            }
        });

        BotonCrear.setText("Crear");
        BotonCrear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonCrearActionPerformed(evt);
            }
        });

        BotonBuscar.setText("Buscar");
        BotonBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonBuscarActionPerformed(evt);
            }
        });

        BotonEliminar.setText("Eliminar");
        BotonEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonEliminarActionPerformed(evt);
            }
        });

        jLabel6.setText("         Películas RedFLixPro");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(56, 56, 56)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(4, 4, 4)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel3)))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jLabel4)
                                .addComponent(jLabel1)
                                .addComponent(jLabel2)))
                        .addGap(48, 48, 48)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(CampoAño, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(CampoDirector, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(CampoTitulo, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(CampoResumen, javax.swing.GroupLayout.PREFERRED_SIZE, 306, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(CampoIdPelicula, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(BotonBuscar)))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addComponent(CampoSalida, javax.swing.GroupLayout.PREFERRED_SIZE, 283, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(34, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(156, 156, 156))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(BotonActualizar)
                        .addGap(72, 72, 72)
                        .addComponent(BotonCrear)
                        .addGap(71, 71, 71)
                        .addComponent(BotonEliminar)
                        .addGap(61, 61, 61))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(14, Short.MAX_VALUE)
                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(CampoIdPelicula, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(BotonBuscar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(CampoTitulo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(CampoResumen, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(CampoAño, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(CampoDirector, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(33, 33, 33)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(BotonActualizar)
                    .addComponent(BotonCrear)
                    .addComponent(BotonEliminar))
                .addGap(18, 18, 18)
                .addComponent(CampoSalida, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void CampoIdPeliculaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CampoIdPeliculaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_CampoIdPeliculaActionPerformed

    private void CampoTituloActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CampoTituloActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_CampoTituloActionPerformed

    private void CampoResumenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CampoResumenActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_CampoResumenActionPerformed

    private void CampoAñoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CampoAñoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_CampoAñoActionPerformed

    private void CampoDirectorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CampoDirectorActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_CampoDirectorActionPerformed

    private void BotonBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonBuscarActionPerformed
        // TODO add your handling code here:
         if (CampoIdPelicula.getText().equals("")){
            CampoSalida.setText("Falta información.");
        }else{
            buscarPorId();
        }   
    }//GEN-LAST:event_BotonBuscarActionPerformed

    private void BotonEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonEliminarActionPerformed
        // TODO add your handling code here:
         if (CampoIdPelicula.getText().equals("") || CampoTitulo.getText().equals("") || CampoResumen.getText().equals("") || CampoAño.getText().equals("") || CampoDirector.getText().equals("")){
            CampoSalida.setText("Falta información.");
        }else{
            eliminarCuenta();
        }   
    }//GEN-LAST:event_BotonEliminarActionPerformed

    private void BotonActualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonActualizarActionPerformed
        // TODO add your handling code here:
        if (CampoIdPelicula.getText().equals("") || CampoTitulo.getText().equals("") || CampoResumen.getText().equals("") || CampoAño.getText().equals("") || CampoDirector.getText().equals("")){
            CampoSalida.setText("Falta información.");
        }else{
            Actualizar();
        }   
    }//GEN-LAST:event_BotonActualizarActionPerformed

    private void BotonCrearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonCrearActionPerformed
        // TODO add your handling code here:
        if (CampoIdPelicula.getText().equals("") || CampoTitulo.getText().equals("") || CampoResumen.getText().equals("") || CampoAño.getText().equals("") || CampoDirector.getText().equals("")){
            CampoSalida.setText("Falta información.");
        }else{
            crearPelicula();
        }   
    }//GEN-LAST:event_BotonCrearActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(peliculaVista.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(peliculaVista.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(peliculaVista.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(peliculaVista.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new peliculaVista().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BotonActualizar;
    private javax.swing.JButton BotonBuscar;
    private javax.swing.JButton BotonCrear;
    private javax.swing.JButton BotonEliminar;
    private javax.swing.JTextField CampoAño;
    private javax.swing.JTextField CampoDirector;
    private javax.swing.JTextField CampoIdPelicula;
    private javax.swing.JTextField CampoResumen;
    private javax.swing.JLabel CampoSalida;
    private javax.swing.JTextField CampoTitulo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    // End of variables declaration//GEN-END:variables

    public void buscarPorId(){
        String Id_pelicula = CampoIdPelicula.getText();
        String Titulo = CampoTitulo.getText();
        String Resumen = CampoResumen.getText();
        String Año = CampoAño.getText();
        String Director = CampoDirector.getText();
     
  
        CampoSalida.setText("Buscando Película.....");
        Optional<peliculas> peliculasConsulta = pelicularepositorio.findById(Id_pelicula);
        //select * from Usuarios where nom_usuario = "Laura";
        if(peliculasConsulta.isPresent()){
                CampoSalida.setText("Película Existente");
            }else{
                CampoSalida.setText("La Película no existe");
            }
    }
    
       public void Actualizar(){
        String Id_pelicula = CampoIdPelicula.getText();
        String Titulo = CampoTitulo.getText();
        String Resumen = CampoResumen.getText();
        String Año = CampoAño.getText();
        String Director = CampoDirector.getText();
     
        
        
        CampoSalida.setText("Buscando Película.....");
        Optional<peliculas> peliculasConsulta = pelicularepositorio.findById(Id_pelicula);        //select * from Usuarios where nom_usuario = "Laura";
        
        if(peliculasConsulta.isPresent()){
            peliculas pelicula = new peliculas();
            pelicula.setId_pelicula(Id_pelicula);
            pelicula.setTitulo(Titulo);
            pelicula.setResumen(Resumen);
            pelicula.setAio(Año);
            pelicula.setNombre_director(Director);
          
            
        pelicularepositorio.save(pelicula);
            CampoSalida.setText("Actualización exitosa");
   
        }else{
            CampoSalida.setText("Película no existente.");
        }
    } 
    
   public void crearPelicula(){
        String Id_pelicula = CampoIdPelicula.getText();
        String Titulo = CampoTitulo.getText();
        String Resumen = CampoResumen.getText();
        String Año = CampoAño.getText();
        String Director = CampoDirector.getText();
     
        CampoSalida.setText("Buscando pelicula.....");
        Optional<peliculas> peliculasConsulta = pelicularepositorio.findById(Id_pelicula);
        //select * from Usuarios where nom_usuario = "Laura";
        if(peliculasConsulta.isPresent()){
            CampoSalida.setText("La película ya existe.");
        }else{
            peliculas pelicula = new peliculas();
            pelicula.setId_pelicula(Id_pelicula);
            pelicula.setTitulo(Titulo);
            pelicula.setResumen(Resumen);
            pelicula.setAio(Año);
            pelicula.setNombre_director(Director);
          
            
        
            pelicularepositorio.save(pelicula);
            CampoSalida.setText("Película creada con exito");
            
        }
    }
    
    public void eliminarCuenta(){
        String Id_pelicula = CampoIdPelicula.getText();
        String Titulo = CampoTitulo.getText();
        String Resumen = CampoResumen.getText();
        String Año = CampoAño.getText();
        String Director = CampoDirector.getText();
        
        
        CampoSalida.setText("Buscando Película.....");
        Optional<peliculas> peliculasConsulta = pelicularepositorio.findById(Id_pelicula);
        //select * from Usuarios where nom_usuario = "Laura";
        if(peliculasConsulta.isPresent()){
            if (peliculasConsulta.get().getId_pelicula().equals(Id_pelicula)){
                pelicularepositorio.delete(peliculasConsulta.get());
                CampoSalida.setText("Película eliminada con exito.");
            }
        }else{
            CampoSalida.setText("La Película no existe.");
        }
    }         



}
